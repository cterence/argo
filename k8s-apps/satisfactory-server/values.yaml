# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.4.0/charts/library/common/values.schema.json
app-template:
  # defaultPodOptions:
  #   nodeSelector:
  #     kubernetes.io/hostname: homelab2
  #   automountServiceAccountToken: false
  #   securityContext:
  #     runAsUser: 568
  #     runAsGroup: 568
  #     fsGroup: 568
  #     fsGroupChangePolicy: "OnRootMismatch"

  controllers:
    # Configure the main controller
    main:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        # Configure the main application container
        main:
          image:
            repository: wolveix/satisfactory-server
            tag: v1.9.1
          env:
            TZ: Europe/Paris
          ports:
            - name: stsf-udp
              containerPort: 7777
              protocol: UDP
            - name: stsf-tcp
              containerPort: 7777
              protocol: TCP
          probes:
            startup:
              enabled: true
              custom: true
              spec:
                tcpSocket:
                  port: 7777
                initialDelaySeconds: 120
                timeoutSeconds: 1
                periodSeconds: 5
                failureThreshold: 30
            liveness:
              enabled: true
              custom: true
              spec:
                tcpSocket:
                  port: 7777
            readiness:
              enabled: true
              custom: true
              spec:
                tcpSocket:
                  port: 7777
      statefulset:
        volumeClaimTemplates:
          - name: config
            accessMode: ReadWriteOnce
            size: 100Gi
            globalMounts:
              - path: /config

  service:
    # Configure a service for the main application
    main:
      controller: main
      type: LoadBalancer
      ports:
        stsf-udp:
          port: 7777
          protocol: UDP
        stsf-tcp:
          port: 7777
          protocol: TCP

  # ingress:
  #   # Configure an Ingress for the main application
  #   main:
  #     annotations:
  #       cert-manager.io/cluster-issuer: letsencrypt
  #       external-dns.alpha.kubernetes.io/target: home.terence.cloud
  #       gethomepage.dev/enabled: "true"
  #       gethomepage.dev/name: _app_
  #       gethomepage.dev/description: _description_
  #       gethomepage.dev/group: _group_
  #       gethomepage.dev/icon: _icon_
  #       # nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
  #       # nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
  #       # nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User
  #     className: "nginx"
  #     hosts:
  #       - host: &host _subdomain_.terence.cloud
  #         paths:
  #           - path: /
  #             pathType: Prefix
  #             service:
  #               identifier: main
  #               port: http
  #     tls:
  #       - secretName: _subdomain_-tls
  #         hosts:
  #           - *host
