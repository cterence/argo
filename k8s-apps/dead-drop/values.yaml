dead-drop:
  configMaps:
    config:
      enabled: true
      data:
        DB_HOST: "libsql-server"
        DB_PORT: "8080"
        ADDRESS: "0.0.0.0"

  controllers:
    server:
      type: deployment
      annotations:
        reloader.stakater.com/auto: "true"
      initContainers:
        init:
          image:
            repository: ghcr.io/cterence/dead-drop
            tag: latest
          args:
            - init
          envFrom:
            - configMapRef:
                identifier: config
      containers:
        main:
          image:
            repository: ghcr.io/cterence/dead-drop
            tag: latest
          args:
            - serve
          ports:
            - name: http
              containerPort: 3000
          envFrom:
            - configMapRef:
                identifier: config
          probes:
            liveness:
              enabled: true
              type: HTTP
              spec:
                path: /health
            readiness:
              enabled: true
              type: HTTP
              spec:
                path: /health

    db:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        main:
          image:
            repository: ghcr.io/tursodatabase/libsql-server
            tag: v0.24.18
          ports:
            - name: http
              containerPort: 8080
          probes:
            liveness:
              enabled: true
              type: HTTP
              spec:
                path: /health
            readiness:
              enabled: true
              type: HTTP
              spec:
                path: /health

    purge:
      type: cronjob
      cronjob:
        schedule: "0 * * * *"
      containers:
        main:
          image:
            repository: ghcr.io/cterence/dead-drop
            tag: latest
          args:
            - purge
          envFrom:
            - configMapRef:
                identifier: config

  service:
    main:
      controller: server
      type: ClusterIP
      ports:
        http:
          port: 3000

  ingress:
    main:
      enabled: true
      className: "nginx"
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        external-dns.alpha.kubernetes.io/target: home.terence.cloud

      hosts:
        - host: dead-drop.terence.cloud
          paths:
            - path: /
              pathType: ImplementationSpecific
              service:
                identifier: main
                port: http
      tls:
      - secretName: dead-drop-tls
        hosts:
          - dead-drop.terence.cloud

libsql-server:
  controllers:
    server:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        main:
          image:
            repository: ghcr.io/tursodatabase/libsql-server
            tag: v0.24.18
          ports:
            - name: http
              containerPort: 8080
          probes:
            liveness:
              enabled: true
              type: HTTP
              spec:
                path: /health
            readiness:
              enabled: true
              type: HTTP
              spec:
                path: /health

  service:
    main:
      controller: server
      type: ClusterIP
      ports:
        http:
          port: 8080

  persistence:
    data:
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 10Gi
      advancedMounts:
        server:
          main:
            - path: /var/lib/sqld
